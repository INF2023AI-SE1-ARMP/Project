{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to our project documentation!","text":""},{"location":"intro_goals/","title":"Einf\u00fchrung und Ziele","text":"<p>Ziel dieses Projekts ist die Entwicklung eines softwaregest\u00fctzten \u00dcberwachungssystems zur kontinuierlichen Kontrolle der Umgebungsbedingungen in Lagerr\u00e4umen. Das System dient der Qualit\u00e4tssicherung und Verlustpr\u00e4vention bei der Lagerung verderblicher oder sensibler G\u00fcter, die spezifische klimatische Bedingungen erfordern.</p> <p>Der prim\u00e4re Anwendungsbereich umfasst die \u00dcberwachung von Lagern f\u00fcr wertvolle G\u00fcter \u2013 wie beispielsweise Lebensmittel oder Pharmazeutika - , deren Qualit\u00e4t von insbesondere folgenden Faktoren abh\u00e4ngig ist:</p> <p>Temperatur: Einhaltung eines konstanten, k\u00fchlen Niveaus.  Luftfeuchtigkeit: Vermeidung von zu hoher oder zu niedriger Feuchtigkeit.  Luftqualit\u00e4t: Sicherstellung einer reinen, insbesondere von Schadstoffen freien Umgebung.  Weiter erfolgt die Kontrolle des Lagerraums im Zuge der \u00dcberwachung des Zustandes der Eingangst\u00fcr (offen / geschlossen).</p>"},{"location":"intro_goals/#aufgabenstellung","title":"Aufgabenstellung","text":"<p>Es gilt ein System zu entwickeln, das sowohl aus Hardware- als auch aus Softwarekomponenten besteht, die ineinandergreifen.</p> <p>Sensorik (Hardware): Ein Netzwerk von IoT erfasst die physikalischen Messgr\u00f6\u00dfen. * Temperatursensor (2x): Messung der Raumtemperatur (Innen- und Au\u00dfen- Raum) in Celsius. * Luftfeuchtigkeitssensor: Erfassung der relativen Luftfeuchtigkeit (in %). * Luftqualit\u00e4tssensor: Detektion von Verunreinigungen in der Luft. * Ultraschallsensor: Zur \u00dcberpr\u00fcfung des Zustandes der T\u00fcr \u2013 ist die T\u00fcr offen oder geschlossen.</p> <p>Software-Plattform (Kernsystem): Eine zentrale Anwendung, die folgende Funktionalit\u00e4ten bereitstellt: * Echtzeit-Dashboard: Grafische Visualisierung aller aktuellen (bspw. alle 30sec ver\u00f6ffentlichten) Sensorwerte. * Historische Datenanalyse: Speicherung und Darstellung von Messdaten \u00fcber Zeit, um Trends und Muster zu erkennen. * Konfigurierbare Schwellenwerte: Erm\u00f6glicht dem Akteur (Lagerverantwortlicher), f\u00fcr jeden Sensor individuelle Min/Max-Grenzwerte zu definieren. * Automatisiertes Alarmsystem: Versendet bei Grenzwertverletzungen automatisch Benachrichtigungen innerhalb k\u00fcrzester  Zeit (bspw. Innerhalb der n\u00e4chsten 90sec) \u2013 beispielsweise via E-Mail oder Push-Benachrichtigung. * Proaktive Gegensteuerung: Bei einem kritischen Ereignis (insbesondere Grenzwertverletzungen) sendet das System eine Nachricht an das zuvor richtige ermittelte Topic. Eine auf dieses Topic abonnierte Entit\u00e4t \u2013 ein Aktor wie ein intelligentes K\u00fchlaggregat empf\u00e4ngt diese Nachricht und f\u00fchrt automatisiert eine Aktion aus.</p> <p>*H\u00f6chste Priorit\u00e4t</p>"},{"location":"intro_goals/#use-case-szenarien","title":"Use-Case-Szenarien","text":"<p>Die folgenden Szenarien beschreiben beispielhaft die wichtigsten Anwendungsf\u00e4lle des Systems:</p>"},{"location":"intro_goals/#primarer-use-case-kontinuierliche-uberwachung-im-normalbetrieb","title":"Prim\u00e4rer Use-Case: Kontinuierliche \u00dcberwachung im Normalbetrieb","text":"Phase Beschreibung Vorbedingungen Das System ist installiert, kalibriert und aktiv. Die Schwellenwerte f\u00fcr alle Sensoren sind konfiguriert. Ablauf 1. Die Sensoren erfassen kontinuierlich bzw. ggf. in definierten Intervallen die Umgebungsdaten.2. Die Daten werden an die zentrale Software-Plattform \u00fcbertragen.3. Die Plattform validiert die Daten und vergleicht sie in Echtzeit mit den hinterlegten Schwellenwerten.4. Solange alle Messwerte innerhalb der definierten Toleranzbereiche liegen, protokolliert das System die Daten und zeigt den Status \"OK\" im Dashboard an. Nachbedingungen Ein l\u00fcckenloser, digitaler Nachweis \\(Audit-Trail\\) der optimalen Lagerbedingungen wird erstellt. Die Qualit\u00e4t der gelagerten G\u00fcter bleibt gesichert."},{"location":"intro_goals/#sekundarer-use-case-abweichung-und-alarmierung","title":"Sekund\u00e4rer Use-Case: Abweichung und Alarmierung","text":"Phase Beschreibung Trigger Ein Sensor meldet einen Messwert, der einen konfigurierten Schwellenwert \u00fcber- oder unterschreitet \\(z\\.B\\. Temperatur &gt; 18 \u00b0C\\). Ablauf 1. Das System identifiziert die Grenzwertverletzung und klassifiziert das Ereignis als kritisch.2. Ein Alarm wird ausgel\u00f6st und es passieren ggf. folgende zwei Aktionen:\u00a0\u00a01. Das System versendet sofort eine Alarm-Benachrichtigung an alle vordefinierten Akteure \\(Lagerverantwortliche\\). Die Nachricht enth\u00e4lt den betroffenen Sensor, den Messwert und den Zeitpunkt des Ereignisses.\u00a0\u00a02. Das System sendet eine MQTT-Nachricht an das zuvor richtig ermittelte Topic. Eine auf das Topic abonnierte Entit\u00e4t, z.B. ein IoT-Ger\u00e4t, f\u00fchrt daraufhin eine Gegenma\u00dfnahme aus.3. Das Ereignis wird mit Zeitstempel und allen relevanten Daten in der System-Logdatei als \"Kritischer Vorfall\" gespeichert.4. Der verantwortliche Akteur empf\u00e4ngt die Nachricht, greift auf das Dashboard zu, analysiert die Situation und leitet Gegenma\u00dfnahmen ein.5. Nach Behebung der Ursache kann der Akteur den Alarm im System quittieren. Nachbedingungen Der potenzielle Schaden an den Lagerg\u00fctern wurde durch rechtzeitige Intervention verhindert. Der Vorfall ist f\u00fcr sp\u00e4tere Analysen dokumentiert."},{"location":"intro_goals/#qualitatsziele","title":"Qualit\u00e4tsziele","text":"<p>Es lassen sich folgende Qualit\u00e4tsziele, gest\u00fctzt durch Qualit\u00e4tsszenarien, definieren:</p>"},{"location":"intro_goals/#erweiterbarkeit","title":"Erweiterbarkeit:","text":""},{"location":"intro_goals/#szenario-1-erweiterung-des-platform-teilsystems-monitoring","title":"Szenario 1: Erweiterung des Platform-Teilsystems \u201eMonitoring\u201c","text":"<p>Dieses Szenario definiert die F\u00e4higkeit, die Funktionalit\u00e4t des bestehenden Monitoring-Moduls (bzw Teilsystems) zu erweitern, ohne das Kernsystem zu ver\u00e4ndern.\u00a0 Ein typischer Fall ist die Anbindung eines neuen Sensortyps.</p> Attribut Beschreibung Szenarioname Erweiterung Monitoring-Modul Quelle Kernentwickler / Externer Entwickler Stimulus Es besteht die Anforderung, einen neuen, bisher nicht unterst\u00fctzten Sensortyp in das System zu integrieren. Artefakt Das Teilsystem \u201eMonitoring\u201c Umgebung System befindet sich in der Entwicklung / Wartung Reaktion Die Software-Architektur des Monitoring-Teilsystems erm\u00f6glicht die Anbindung des neuen Sensortyps. Bestehende Funktionen (wie die Verarbeitung der Daten von Temperatur- oder Feuchtigkeitssensoren) bleiben davon unber\u00fchrt und funktionieren weiterhin korrekt. Reaktionsma\u00df Die Integration des neuen Sensortyps (inklusive Datenverarbeitung, Speicherung und Visualisierung) ist von einem Entwickler innerhalb von sieben Tagen ohne Regressionsfehler in anderen Teilen des Systems umsetzbar."},{"location":"intro_goals/#szenario-2-erweiterung-der-plattform-um-neue-teilsysteme","title":"Szenario 2: Erweiterung der Plattform um neue Teilsysteme","text":"<p>Dieses Szenario beschreibt die Erweiterbarkeit der gesamten Plattform-Architektur. Das Ziel ist es, komplett neue Funktionalit\u00e4tsbl\u00f6cke als eigenst\u00e4ndige Teilsysteme hinzuzuf\u00fcgen, wie zum Beispiel ein Modul \"Anleitungsbibliothek\". Dabei soll bestehende zentrale Funkktionalit\u00e4t wiederverwendet werden.</p> Attribut Beschreibung Szenarioname Erweiterung Plattform Quelle Kernentwickler / Externer Entwickler Stimulus Die Plattform soll um ein neues Teilsystem \"Anleitungsbibliothek\" erweitert werden, das es Nutzern erm\u00f6glicht, Handlungsanweisungen zu hinterlegen und abzurufen. Artefakt Die gesamte Software-Plattform, insbesondere ihre Kernarchitektur und die definierten Schnittstellen. Umgebung System befindet sich in der Weiterentwicklung Reaktion Die Plattform-Architektur stellt klar definierte Erweiterungspunkte beziehungsweise eine offene API bereit.Das neue Teilsystem kann als eigenst\u00e4ndiges Modul oder Service entwickelt und in die Plattform integriert werden, ohne den Code der bestehenden Teilsysteme (z.B. \"Monitoring\") zu modifizieren.Bestehende Plattformlogik (z.B. Benutzerverwaltung) wird wiederverwendet bzw. integriert. Reaktionsma\u00df Das neue Teilsystem kann ohne Ausfallzeit des Gesamtsystems (\"Zero Downtime Deployment\") in Betrieb genommen werden.Der Entwicklungsaufwand f\u00fcr die reine Integration (Anbindung an die zentrale Navigation, Benutzerverwaltung, etc.) betr\u00e4gt weniger als eine Woche."},{"location":"intro_goals/#performance","title":"Performance:","text":""},{"location":"intro_goals/#szenario-alarmierungszeit-90-sekunden-ab-grenzwertuberschreitung","title":"Szenario: Alarmierungszeit \u2264 90 Sekunden ab Grenzwert\u00fcberschreitung","text":"<p>Ein rasches \u00dcberschreiten oder Unterschreiten definierter Schwellenwerte der Umgebungsparameter \u2013 wie Temperatur, oder Luftfeuchtigkeit \u2013 kann potenziell erhebliche Sch\u00e4den verursachen. Ziel des Alarmierungssystems ist es daher, eine zust\u00e4ndige Entit\u00e4t (z.B. eine Nutzerperson oder ein autonom agierendes IoT-System) innerhalb k\u00fcrzester Zeit (90 Sekunden nach Detektion) zu informieren, um pr\u00e4ventive oder mitigierende Ma\u00dfnahmen einzuleiten.</p> <p>Die Benachrichtigung erfolgt dabei dual: * Push-Benachrichtigung an Endger\u00e4te zur unmittelbaren menschlichen Wahrnehmung * MQTT-Nachricht an ein vordefiniertes Topic zur automatisierten Weiterverarbeitung durch angeschlossene Systeme</p> Attribut Beschreibung Szenarioname Schnelles Alarmierungssystem Quelle Sensorik / Arduino / Software-Plattform (z.B. App) Stimulus Gemessene Temperatur unterschreitet den vereinbarten Grenzwert f\u00fcr l\u00e4nger als 30s. Artefakt Arduino mit Sensorik, die Software inklusive UI, Benachrichtigungssystem \\(z\\.B\\. Email-Client\\) und MQTT-Publisher. Umgebung Das System befindet sich im produktiven Normalbetrieb. Reaktion Durch kontinuierliche Daten\u00fcbertragung kann schnell ein abnormaler Zustand detektiert werden. Daraufhin werden betreffende Entit\u00e4ten alarmiert \u2013 Nutzer und ggf. weitere Systeme. Reaktionsma\u00df Nach Detektion wird innerhalb von 90 Sekunden sowohl eine Push-Benachrichtigung, als auch eine MQTT-Nachricht versendet."},{"location":"intro_goals/#sicherheit","title":"Sicherheit:","text":""},{"location":"intro_goals/#szenario-sichere-authentifizierung-und-autorisierung","title":"Szenario: Sichere Authentifizierung und Autorisierung","text":"<p>Dieses Szenario stellt sicher, dass nur berechtigte Personen auf die Plattform zugreifen k\u00f6nnen und dort nur die Aktionen ausf\u00fchren d\u00fcrfen, die ihrer Rolle entsprechen.</p> Attribut Beschreibung Szenarioname Authentifizierungs-, Autorisierungs- Service Quelle Ein registrierter Nutzer (z.B. ein Lagerverantwortlicher oder Systemadministrator). Stimulus Der Nutzer versucht, sich \u00fcber die Login-Maske der Plattform am System anzumelden, um auf das Dashboard zuzugreifen oder Konfigurationen vorzunehmen. Artefakt Authentifizierungs-, Autorisierungs-Service der Software-Plattform. Umgebung Das System befindet sich im produktiven Normalbetrieb. Reaktion Das System validiert die eingegebenen Anmeldedaten \\(z\\.B\\. Benutzername und Passwort\\) gegen die hinterlegte Datenbank. Bei erfolgreicher Authentifizierung gew\u00e4hrt das System dem Nutzer Zugriff entsprechend seiner vordefinierten Rolle \\(z\\.B\\. Lesezugriff f\u00fcr einen Auditor, Vollzugriff f\u00fcr einen Administrator\\). Bei fehlerhafter Eingabe wird der Zugriff verweigert und der fehlgeschlagene Versuch sicher protokolliert. Reaktionsma\u00df Die Anmeldung eines autorisierten Nutzers erfolgt in weniger als 2 Sekunden."},{"location":"intro_goals/#verfugbarkeit","title":"Verf\u00fcgbarkeit:","text":""},{"location":"intro_goals/#szenario-fehlertoleranz-und-automatische-wiederherstellung","title":"Szenario: Fehlertoleranz und automatische Wiederherstellung","text":"<p>Kritische Lagerbedingungen erfordern ein System, das m\u00f6glichst durchg\u00e4ngig verf\u00fcgbar ist, um eine l\u00fcckenlose Echtzeit\u00fcberwachung sicherzustellen. Falls das System \u00fcber einen l\u00e4ngeren Zeitraum nicht verf\u00fcgbar ist, ist der Zustand des Lagerguts unbekannt, und es k\u00f6nnten unbemerkte Sch\u00e4den entstehen, wenn beispielsweise eine Temperaturschwelle \u00fcberschritten wird.</p> Attribut Beschreibung Szenarioname System-Resilienz Quelle Ein interner Fehlerzustand Stimulus Ein unerwarteter Ausfall einer kritischen Komponente, z.B. der Absturz der Server-Anwendung, ein \"Einfrieren\" des Mikrocontrollers oder ein tempor\u00e4rer Verlust der Netzwerkverbindung. Artefakt Die gesamte Systeminfrastruktur: Sensor-Einheit (Hardware), Software-Plattform (Backend) und die Kommunikationskan\u00e4le. Umgebung Das System befindet sich im produktiven Normalbetrieb. Reaktion Das System leitet automatisch Ma\u00dfnahmen zur Wiederherstellung der vollen Funktionsf\u00e4higkeit ein. Diese Ma\u00dfnahmen umfassen insbesondere:- Automatisierte Neustarts: Software-Dienste werden durch Prozess-Manager (z.B. systemd) und Mikrocontroller durch Hardware-Watchdog-Timer bei einem Absturz sofort neu gestartet.- Robuste Wiederverbindungslogik: Das System versucht bei einem Verbindungsabbruch (z.B. zum WLAN oder MQTT-Broker) proaktiv und in regelm\u00e4\u00dfigen Intervallen, die Verbindung wiederherzustellen.- Zustands\u00fcberwachung (Health Check): Intern l\u00e4sst sich der Zustand der Anwendung \u00fcberpr\u00fcfen. Reaktionsma\u00df Kritische Systemkomponenten stellen ihre Funktionsf\u00e4higkeit nach einem behebbaren Ausfall automatisch und ohne manuellen Eingriff wieder her.Ein Administrator wird \u00fcber den Vorfall und die erfolgreiche Wiederherstellung informiert."},{"location":"intro_goals/#stakeholder","title":"Stakeholder","text":"Stakeholder Beschreibung Lagerverantwortlicher Definiert die Soll-Werte f\u00fcr die Umgebungsbedingungen, \u00fcberwacht den Systemstatus und ist der prim\u00e4re Empf\u00e4nger von Alarmmeldungen. Nutzt die historischen Daten f\u00fcr Prozessoptimierung und Qualit\u00e4tsaudits. Systemadministrator Verantwortlich f\u00fcr Installation, Konfiguration und Wartung des Systems (z.B. Hinzuf\u00fcgen neuer Platformnutzerprofile)."}]}